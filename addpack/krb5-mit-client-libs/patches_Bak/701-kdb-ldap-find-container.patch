--- a/src/plugins/kdb/ldap/libkdb_ldap/ldap_krbcontainer.c
+++ b/src/plugins/kdb/ldap/libkdb_ldap/ldap_krbcontainer.c
@@ -32,6 +32,8 @@
 #include "kdb_ldap.h"
 #include "ldap_err.h"
 
+char    *policyrefattribute[] = {"krbTicketPolicyReference",NULL};
+
 /*
  * Read the kerberos container location from krb5.conf.
  */
@@ -39,8 +41,9 @@
 krb5_error_code
 krb5_ldap_read_krbcontainer_dn(krb5_context context, char **container_dn)
 {
-    krb5_error_code                 st=0;
+    krb5_error_code                 st=0, tempst=0;
     LDAP                            *ld=NULL;
+    LDAPMessage                     *result=NULL, *ent=NULL;
     char                            *dn=NULL;
     kdb5_dal_handle                 *dal_handle=NULL;
     krb5_ldap_context               *ldap_context=NULL;
@@ -74,6 +77,25 @@
         }
     }
 
+    /* try to locate container in LDAP */
+    if (dn == NULL) {
+        LDAP_SEARCH_1(NULL, LDAP_SCOPE_SUBTREE, "(objectclass=krbContainer)", policyrefattribute, IGNORE_STATUS);
+        if (st != LDAP_SUCCESS && st != LDAP_NO_SUCH_OBJECT) {
+            st = set_ldap_error(context, st, OP_SEARCH);
+            goto cleanup;
+        }
+
+        if (st == LDAP_NO_SUCH_OBJECT) {
+            st = KRB5_KDB_NOENTRY;
+            goto cleanup;
+        }
+
+        if ((ent = ldap_first_entry(ld, result))) {
+            dn = ldap_get_dn(ld, ent);
+            ldap_msgfree(result);
+        }
+    }
+
     if (dn == NULL) {
         st = KRB5_KDB_SERVER_INTERNAL_ERR;
         krb5_set_error_message(context, st,
