--- a/source3/Makefile.in
+++ b/source3/Makefile.in
@@ -103,25 +103,25 @@
 LDAP_LIBS=@LDAP_LIBS@
 NSCD_LIBS=@NSCD_LIBS@
 LIBWBCLIENT=@LIBWBCLIENT_STATIC@ @LIBWBCLIENT_SHARED@
-LIBWBCLIENT_LIBS=@LIBWBCLIENT_LIBS@
+LIBWBCLIENT_LIBS=@LIBWBCLIENT_STATIC@
 PTHREAD_LDFLAGS=@PTHREAD_LDFLAGS@
 PTHREAD_CFLAGS=@PTHREAD_CFLAGS@
 DNSSD_LIBS=@DNSSD_LIBS@
 AVAHI_LIBS=@AVAHI_LIBS@
 POPT_LIBS=@POPTLIBS@
 LIBTALLOC=@LIBTALLOC_STATIC@
-LIBTALLOC_LIBS=@LIBTALLOC_LIBS@
+LIBTALLOC_LIBS=@LIBTALLOC_STATIC@
 LIBTEVENT=@LIBTEVENT_STATIC@
 LIBTEVENT_LIBS=@LIBTEVENT_LIBS@
 LIBREPLACE_LIBS=@LIBREPLACE_LIBS@
 LIBTDB=@LIBTDB_STATIC@
-LIBTDB_LIBS=@LIBTDB_LIBS@
+LIBTDB_LIBS=@LIBTDB_STATIC@
 TDB_DEPS=@TDB_DEPS@
 LIBNTDB=@LIBNTDB_STATIC@
 LIBNTDB_LIBS=@LIBNTDB_LIBS@
 NTDB_DEPS=@NTDB_DEPS@
 LIBNETAPI=@LIBNETAPI_STATIC@ @LIBNETAPI_SHARED@
-LIBNETAPI_LIBS=@LIBNETAPI_LIBS@
+LIBNETAPI_LIBS=@LIBNETAPI_STATIC@
 LIBSMBCLIENT_LIBS=@LIBSMBCLIENT_LIBS@
 LIBSMBSHAREMODES_LIBS=@LIBSMBSHAREMODES_LIBS@
 
@@ -210,7 +210,7 @@
 
 # Note that all executable programs now provide for an optional executable suffix.
 
-SBIN_PROGS = bin/smbd bin/nmbd @SWAT_SBIN_TARGETS@ @EXTRA_SBIN_PROGS@
+SBIN_PROGS = bin/samba4_multicall bin/smbd bin/nmbd @SWAT_SBIN_TARGETS@ @EXTRA_SBIN_PROGS@
 
 BIN_PROGS1 = bin/smbclient bin/net bin/smbspool \
 	bin/testparm bin/smbstatus bin/smbget \
@@ -1851,6 +1851,99 @@
 	  dir=bin $(MAKEDIR); fi
 	@: >> $@ || : > $@ # what a fancy emoticon!
 
+smbd/server_multicall.o: smbd/server.c smbd/server.o
+	@echo Compiling $<.c
+	@$(COMPILE_CC_PATH) -Dmain=smbd_main && exit 0;\
+		echo "The following command failed:" 1>&2;\
+		echo "$(COMPILE_CC_PATH)" 1>&2;\
+		$(COMPILE_CC_PATH) >/dev/null 2>&1
+
+nmbd/nmbd_multicall.o: nmbd/nmbd.c nmbd/nmbd.o
+	@echo Compiling $<.c
+	@$(COMPILE_CC_PATH) -Dmain=nmbd_main && exit 0;\
+		echo "The following command failed:" 1>&2;\
+		echo "$(COMPILE_CC_PATH)" 1>&2;\
+		$(COMPILE_CC_PATH) >/dev/null 2>&1
+
+utils/smbpasswd_multicall.o: utils/smbpasswd.c utils/smbpasswd.o
+	@echo Compiling $<.c
+	@$(COMPILE_CC_PATH) -Dmain=smbpasswd_main && exit 0;\
+		echo "The following command failed:" 1>&2;\
+		echo "$(COMPILE_CC_PATH)" 1>&2;\
+		$(COMPILE_CC_PATH) >/dev/null 2>&1
+
+utils/smbcontrol_multicall.o: utils/smbcontrol.c utils/smbcontrol.o
+	@echo Compiling $<.c
+	@$(COMPILE_CC_PATH) -Dmain=smbcontrol_main && exit 0;\
+		echo "The following command failed:" 1>&2;\
+		echo "$(COMPILE_CC_PATH)" 1>&2;\
+		$(COMPILE_CC_PATH) >/dev/null 2>&1
+
+utils/smbtree_multicall.o: utils/smbtree.c utils/smbtree.o
+	@echo Compiling $<.c
+	@$(COMPILE_CC_PATH) -Dmain=smbtree_main && exit 0;\
+		echo "The following command failed:" 1>&2;\
+		echo "$(COMPILE_CC_PATH)" 1>&2;\
+		$(COMPILE_CC_PATH) >/dev/null 2>&1
+
+utils/status_multicall.o: utils/status.c utils/status.o
+	@echo Compiling $<.c
+	@$(COMPILE_CC_PATH) -Dmain=smbstatus_main && exit 0;\
+		echo "The following command failed:" 1>&2;\
+		echo "$(COMPILE_CC_PATH)" 1>&2;\
+		$(COMPILE_CC_PATH) >/dev/null 2>&1
+
+utils/smbcquotas_multicall.o: utils/smbcquotas.c utils/smbcquotas.o
+	@echo Compiling $<.c
+	@$(COMPILE_CC_PATH) -Dmain=smbcquotas_main && exit 0;\
+		echo "The following command failed:" 1>&2;\
+		echo "$(COMPILE_CC_PATH)" 1>&2;\
+		$(COMPILE_CC_PATH) >/dev/null 2>&1
+
+utils/smbcacls_multicall.o: utils/smbcacls.c utils/smbcacls.o
+	@echo Compiling $<.c
+	@$(COMPILE_CC_PATH) -Dmain=smbcacls_main && exit 0;\
+		echo "The following command failed:" 1>&2;\
+		echo "$(COMPILE_CC_PATH)" 1>&2;\
+		$(COMPILE_CC_PATH) >/dev/null 2>&1
+
+utils/nmblookup_multicall.o: utils/nmblookup.c utils/nmblookup.o
+	@echo Compiling $<.c
+	@$(COMPILE_CC_PATH) -Dmain=nmblookup_main && exit 0;\
+		echo "The following command failed:" 1>&2;\
+		echo "$(COMPILE_CC_PATH)" 1>&2;\
+		$(COMPILE_CC_PATH) >/dev/null 2>&1
+
+utils/testparm_multicall.o: utils/testparm.c utils/testparm.o
+	@echo Compiling $<.c
+	@$(COMPILE_CC_PATH) -Dmain=testparm_main && exit 0;\
+		echo "The following command failed:" 1>&2;\
+		echo "$(COMPILE_CC_PATH)" 1>&2;\
+		$(COMPILE_CC_PATH) >/dev/null 2>&1
+
+SMBD_MULTI_O = $(patsubst smbd/server.o,smbd/server_multicall.o,$(SMBD_OBJ))
+NMBD_MULTI_O = $(patsubst nmbd/nmbd.o,nmbd/nmbd_multicall.o,$(filter-out $(LIB_DUMMY_OBJ),$(NMBD_OBJ)))
+SMBPASSWD_MULTI_O = $(patsubst utils/smbpasswd.o,utils/smbpasswd_multicall.o,$(filter-out $(LIB_DUMMY_OBJ),$(SMBPASSWD_OBJ)))
+SMBCONTROL_MULTI_O = $(patsubst utils/smbcontrol.o,utils/smbcontrol_multicall.o,$(filter-out $(LIB_DUMMY_OBJ),$(SMBCONTROL_OBJ)))
+SMBTREE_MULTI_O =  $(patsubst utils/smbtree.o,utils/smbtree_multicall.o,$(filter-out $(LIB_DUMMY_OBJ),$(SMBTREE_OBJ)))
+SMBSTATUS_MULTI_O =  $(patsubst utils/status.o,utils/status_multicall.o,$(filter-out $(LIB_DUMMY_OBJ),$(STATUS_OBJ)))
+SMBCQUOTAS_MULTI_O =  $(patsubst utils/smbcquotas.o,utils/smbcquotas_multicall.o,$(filter-out $(LIB_DUMMY_OBJ),$(SMBCQUOTAS_OBJ)))
+SMBCACLS_MULTI_O =  $(patsubst utils/smbcacls.o,utils/smbcacls_multicall.o,$(filter-out $(LIB_DUMMY_OBJ),$(SMBCACLS_OBJ)))
+NMBLOOKUP_MULTI_O =  $(patsubst utils/nmblookup.o,utils/nmblookup_multicall.o,$(filter-out $(LIB_DUMMY_OBJ),$(NMBLOOKUP_OBJ)))
+TESTPARM_MULTI_O =  $(patsubst utils/testparm.o,utils/testparm_multicall.o,$(filter-out $(LIB_DUMMY_OBJ),$(TESTPARM_OBJ)))
+MULTI_O = multicall.o
+
+MULTICALL_O = $(sort $(SMBD_MULTI_O) $(NMBD_MULTI_O) $(SMBPASSWD_MULTI_O) $(SMBCONTROL_MULTI_O) $(SMBTREE_MULTI_O) $(SMBSTATUS_MULTI_O) $(SMBCQUOTAS_MULTI_O) \
+		     $(SMBCACLS_MULTI_O) $(NMBLOOKUP_MULTI_O) $(TESTPARM_MULTI_O) $(MULTI_O))
+
+bin/samba4_multicall: $(BINARY_PREREQS) $(MULTICALL_O) $(LIBTALLOC) $(LIBTEVENT) $(LIBTDB) $(LIBWBCLIENT) @BUILD_POPT@
+	@echo Linking $@
+	@$(CC) -o $@ $(MULTICALL_O) $(LDFLAGS) $(LDAP_LIBS) @SMBD_FAM_LIBS@ \
+		$(KRB5LIBS) $(DYNEXP) $(PRINT_LIBS) $(AUTH_LIBS) \
+		$(ACL_LIBS) $(PASSDB_LIBS) $(LIBS) $(DNSSD_LIBS) $(AVAHI_LIBS) \
+		$(POPT_LIBS) @SMBD_LIBS@ $(LIBTALLOC_LIBS) $(LIBTEVENT_LIBS) $(LIBTDB_LIBS) \
+		$(LIBWBCLIENT_LIBS) $(ZLIB_LIBS)
+
 bin/smbd: $(BINARY_PREREQS) $(SMBD_OBJ) $(LIBTALLOC) $(LIBTEVENT) $(LIBTDB) $(LIBWBCLIENT) @BUILD_POPT@
 	@echo Linking $@
 	@$(CC) -o $@ $(SMBD_OBJ) $(LDFLAGS) $(LDAP_LIBS) @SMBD_FAM_LIBS@ \
--- a/source3/multicall.c
+++ b/source3/multicall.c
@@ -0,0 +1,72 @@
+#include <stdio.h>
+#include <string.h>
+#include <syslog.h>
+#include <stdarg.h>
+#include <unistd.h>
+#include <limits.h>
+#include <stdlib.h>
+
+extern int smbd_main(int argc, char **argv);
+extern int nmbd_main(int argc, char **argv);
+extern int smbpasswd_main(int argc, char **argv);
+extern int smbcontrol_main(int argc, char **argv);
+extern int smbtree_main(int argc, char **argv);
+extern int smbstatus_main(int argc, char **argv);
+extern int smbcquotas_main(int argc, char **argv);
+extern int smbcacls_main(int argc, char **argv);
+extern int nmblookup_main(int argc, char **argv);
+extern int testparm_main(int argc, char **argv);
+
+static struct {
+	const char *name;
+	int (*func_main)(int argc, char **argv);
+} multicall[] = {
+	{ "smbd", smbd_main },
+	{ "nmbd", nmbd_main },
+	{ "smbpasswd", smbpasswd_main },
+	{ "smbcontrol", smbcontrol_main },
+	{ "smbtree", smbtree_main },
+	{ "smbstatus", smbstatus_main },
+	{ "smbcquotas", smbcquotas_main },
+	{ "smbcacls", smbcacls_main },
+	{ "nmblookup", nmblookup_main },
+	{ "testparm", testparm_main },
+};
+
+#define ARRAY_SIZE(a) (sizeof(a) / sizeof(a[0]))
+
+int main(int argc, char **argv)
+{
+	unsigned int i, len;
+	extern char *__progname;
+	char path[PATH_MAX], *self;
+
+	len = readlink("/proc/self/exe", path, sizeof(path));
+	path[len] = 0;
+	for (i=len-2; i>0 && path[i] != '/'; --i);
+	self = path + i + 1;
+
+	if (0 == strcmp(__progname, self)) {
+		if (argc == 1) goto usage;
+		argv++;
+		--argc;
+		__progname = argv[0];
+	}
+
+	for (i = 0; i < ARRAY_SIZE(multicall); i++) {
+		if (0 == strcmp(__progname, multicall[i].name)) {
+			return multicall[i].func_main(argc, argv);
+		}
+	}
+
+usage:
+	fprintf(stderr, "%s multicall binary\nAvailable commands:\n\n", self);
+	for (i = 0; i < ARRAY_SIZE(multicall); i++) {
+		fprintf(stderr, "%s", multicall[i].name);
+		if (i != 0 && i != ARRAY_SIZE(multicall)-1)
+			fprintf(stderr, ", ");
+	}
+	fprintf(stderr, "\n");
+
+	return 1;
+}
